name: CI Pull Request

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_wrapper:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v5

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

  build:
    name: Build pull request
    needs: check_wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout pull request
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: master
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Copy CI gradle.properties
        run: |
          cd master
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Build Jar
        working-directory: master
        run: ./gradlew ktlintCheck :server:shadowJar --stacktrace

  postgres-test:
    name: Test pull request postgres
    runs-on: ubuntu-latest
    needs: check_wrapper
    container: node:20-bookworm-slim
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout pull request
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: master
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Copy CI gradle.properties
        run: |
          cd master
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Build Jar
        working-directory: master
        run: ./gradlew :server:shadowJar --stacktrace

      - name: Run Jar
        working-directory: master
        run: |
          JAR=$(ls ./server/build/*.jar| head -1)
          timeout 30s java -Dsuwayomi.tachidesk.config.databaseType=POSTGRESQL \
              -Dsuwayomi.tachidesk.config.databaseUrl=postgresql://localhost:5432/postgres \
              -Dsuwayomi.tachidesk.config.databaseUsername=postgres \
              -Dsuwayomi.tachidesk.config.databasePassword=postgres \
              -jar "$JAR"